/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package load.and.apply

import load.and.apply.model.ContentRecord
import org.junit.BeforeClass
import org.springframework.boot.SpringApplication
import org.springframework.context.ConfigurableApplicationContext
import kotlin.test.Test
import kotlin.test.assertEquals

class AppTest {


    companion object {
        lateinit var recordsService: RecordsService
        lateinit var app: ConfigurableApplicationContext

        @JvmStatic
        @BeforeClass
        fun startApp() {
            app = SpringApplication.run(App::class.java, *emptyArray())
            recordsService = app.getBean(RecordsService::class.java)
        }
    }


    @Test fun testListTableNames() {
       recordsService.listTables().forEach{
           println("Table: $it")
       }
    }

    @Test fun insertRecords(){
        recordsService.insert( ContentRecord()._setPartitionId("1")._setSortKey("r1_l1")._setLoadId("l1")._setContent("content v1"))
        recordsService.insert( ContentRecord()._setPartitionId("1")._setSortKey("r1_l2")._setLoadId("l2")._setContent("content v1-modified"))
        recordsService.insert( ContentRecord()._setPartitionId("1")._setSortKey("r1_l3")._setLoadId("l3")._setContent("content v1-failure-modified"))
        recordsService.insert( ContentRecord()._setPartitionId("1")._setSortKey("r2_l2")._setLoadId("l2")._setContent("content r2 v1"))
        recordsService.insert( ContentRecord()._setPartitionId("1")._setSortKey("r2_l3")._setLoadId("l2")._setContent("content r2 v1"))
    }


    @Test fun searchByActiveLoads(){
        var activeLoads  = listOf("l1","l2")
        var r: ContentRecord =  recordsService.find("r1", activeLoads)
        assertEquals("content v1-modified", r.content)

        activeLoads  = listOf("l1","l2","l3")
        r =  recordsService.find("r1", activeLoads)
        assertEquals("content v1-failure-modified", r.content)
    }


    @Test fun findAndRemoveLoad(){
        recordsService.deleteRecordsByLoad("l3")
    }
}
